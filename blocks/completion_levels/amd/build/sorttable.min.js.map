{"version":3,"sources":["../src/sorttable.js"],"names":["define","$","makeSortable","tableid","nosortcols","defaultsortcol","nexcludedlines","sortdirection","undefined","table","$ths","nths","length","each","i","index","this","indexOf","append","$arrow","$th","closest","icol","css","click","hasClass","toggleClass","removeClass","addClass","num","rows","Array","from","children","endrows","splice","sort","a","b","getCellValue","tr","find","attr","text","v1","v2","isNaN","toString","localeCompare","forEach","first","addBack","test","html","e","stopPropagation","eq"],"mappings":"AAoBAA,QAAQ,UAAW,SAASC,GAgFxB,OACIC,aAtEJ,SAAsBC,EAASC,KAAiBC,EAAgBC,EAAiB,GAC7E,IAAIC,EACmB,OAAnBF,IACAA,OAAiBG,GAErB,IAAIC,EAAQR,EAAE,IAAME,EAAU,UAC1BO,EAAOT,EAAE,IAAME,EAAU,aACzBQ,EAAOD,EAAKE,OAChBF,EAAKG,KAAK,WAEN,IAAIC,EAAIJ,EAAKK,MAAMC,OACW,GAA1BZ,EAAWa,QAAQH,KAA6C,GAAjCV,EAAWa,QAAQH,EAAIH,IACtDV,EAAEe,MAAME,OAAO,6CAIvBjB,EAAE,IAAME,EAAU,qBAAqBU,KAAK,WACxC,IAAIM,EAASlB,EAAEe,MACXI,EAAMD,EAAOE,QAAQ,MACrBC,EAAOZ,EAAKK,MAAMK,GACtBA,EAAIG,IAAI,SAAU,WAAWA,IAAI,cAAe,QAAQA,IAAI,iBAAkB,OAAOC,MAAM,WAClFL,EAAOM,SAAS,qBAOjBlB,GAAiBA,EACjBY,EAAOO,YAAY,cAAgC,GAAjBnB,GAAoBmB,YAAY,gBAAkC,GAAjBnB,KANnFN,EAAE,sBAAsB0B,YAAY,8CACpCR,EAAOS,SAAS,kCAChBrB,EAAgB,GAOpB,IAAIsB,EAAM,EACNC,EAAOC,MAAMC,KAAKvB,EAAMwB,SAAS,OACjCC,EAAUJ,EAAKK,QAAQ7B,EAAgBA,GAC3CwB,EAAKM,KAAK,SAASC,EAAGC,GAEd,IAAIC,EAAe,SAASC,GACxB,OAAOvC,EAAEuC,GAAIC,KAAK,UAAYnB,EAAO,YAAYoB,KAAK,UAAYzC,EAAEuC,GAAIC,KAAK,UAAYnB,GAAMqB,QAE/FC,EAAKL,EAAaF,GAClBQ,EAAKN,EAAaD,GACtB,OAAO/B,GACK,KAAPqC,GAAoB,KAAPC,GAAcC,MAAMF,IAAQE,MAAMD,GAAgBD,EAAGG,WAAWC,cAAcH,GAAtCD,EAAKC,KAEtEI,QAAQ,SAAST,GAEEvC,EAAEuC,GAAIP,SAAS,MAAMiB,QAC3BT,KAAK,gBAAgBU,QAAQ,gBAAgBtC,KAAK,WACpD,WAAWuC,KAAKnD,EAAEe,MAAMqC,SACxBpD,EAAEe,MAAMqC,KAAKxB,KAGrBA,IAEApB,EAAMS,OAAOsB,KAGjBN,EAAQe,QAAQ,SAAST,GACrB/B,EAAMS,OAAOsB,OAIrBpB,EAAIqB,KAAK,KAAKjB,MAAM,SAAS8B,GACzBA,EAAEC,sBAEPC,GAAGnD,GAAgBmB","file":"sorttable.min.js","sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Provides utility methods to make a html table sortable by column.\n * @copyright  Astor Bizard, 2020\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n\n    /**\n     * Makes an html table sortable by creating clickable column headers and arrows.\n     * @param {String} tableid The id of the table to make sortable.\n     * @param {Number[]} nosortcols (optional) An array of column indexes to exclude.\n     *     Negative indexes can be specified to exclude columns counting from the last.\n     * @param {Number} defaultsortcol (optional) The index of the column to sort by default.\n     *     This index is computed after excluding columns. Negative indexes are allowed.\n     * @param {Number} nexcludedlines (optional) The number of lines to ignore at the end of the table.\n     */\n    function makeSortable(tableid, nosortcols = [], defaultsortcol, nexcludedlines = 0) {\n        var sortdirection;\n        if (defaultsortcol === null) {\n            defaultsortcol = undefined;\n        }\n        var table = $('#' + tableid + ' tbody');\n        var $ths = $('#' + tableid + ' thead th');\n        var nths = $ths.length;\n        $ths.each(function() {\n            // Create sorting arrows except for excluded columns.\n            var i = $ths.index(this);\n            if (nosortcols.indexOf(i) == -1 && nosortcols.indexOf(i - nths) == -1) {\n                $(this).append('<i class=\"icon fa fa-fw sortarrow\"></i>');\n            }\n        });\n        // Setup sort arrows / headers.\n        $('#' + tableid + ' thead .sortarrow').each(function() {\n            var $arrow = $(this);\n            var $th = $arrow.closest('th');\n            var icol = $ths.index($th);\n            $th.css('cursor', 'pointer').css('user-select', 'none').css('vertical-align', 'top').click(function() {\n                if (!$arrow.hasClass('sortarrow-active')) {\n                    // Change of sorting column: remove old sorting column arrow and setup the new one.\n                    $('i.sortarrow-active').removeClass('sortarrow-active fa-caret-down fa-caret-up');\n                    $arrow.addClass('sortarrow-active fa-caret-down');\n                    sortdirection = 1;\n                } else {\n                    // Change sorting direction and arrow display.\n                    sortdirection = -sortdirection;\n                    $arrow.toggleClass('fa-caret-up', sortdirection != 1).toggleClass('fa-caret-down', sortdirection == 1);\n                }\n                // Sort rows.\n                var num = 1;\n                var rows = Array.from(table.children('tr'));\n                var endrows = rows.splice(-nexcludedlines, nexcludedlines);\n                rows.sort(function(a, b) {\n                        // Sort according to 'value' attributes or inner text.\n                        var getCellValue = function(tr) {\n                            return $(tr).find('.cell.c' + icol + ' [value]').attr('value') || $(tr).find('.cell.c' + icol).text();\n                        };\n                        var v1 = getCellValue(a);\n                        var v2 = getCellValue(b);\n                        return sortdirection *\n                            (v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2));\n                })\n                .forEach(function(tr) {\n                    // Renumber first column.\n                    var $firstcol = $(tr).children('td').first();\n                    $firstcol.find(':not(:empty)').addBack(':not(:empty)').each(function() {\n                        if (/^[0-9]+$/.test($(this).html())) {\n                            $(this).html(num);\n                        }\n                    });\n                    num++;\n                    // Re-insert row inside table.\n                    table.append(tr);\n                });\n                // Re-insert excluded rows at the end.\n                endrows.forEach(function(tr) {\n                    table.append(tr);\n                });\n            });\n            // Do not sort upon click on header link.\n            $th.find('a').click(function(e) {\n                e.stopPropagation();\n            });\n        }).eq(defaultsortcol).click();\n    }\n\n    return {\n        makeSortable: makeSortable\n    };\n});"]}